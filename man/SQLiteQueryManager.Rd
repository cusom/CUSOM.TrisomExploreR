% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manager_DatabaseManagers.R
\name{SQLiteQueryManager}
\alias{SQLiteQueryManager}
\title{R6 Class to manage SQLite Database queries - subclass of SQLiteConnectionManager}
\description{
Manage SQLite Database queries
}
\section{Super class}{
\code{\link[TrisomExploreR:SQLiteConnectionManager]{TrisomExploreR::SQLiteConnectionManager}} -> \code{SQLiteQueryManager}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{queryString}}{- string - Parameterized SQL Query to execute against target database}

\item{\code{parameters}}{- tibble - tibble of parameter names and values}

\item{\code{data}}{- tibble - query result formatted as tibble}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SQLiteQueryManager-new}{\code{SQLiteQueryManager$new()}}
\item \href{#method-SQLiteQueryManager-getQuery}{\code{SQLiteQueryManager$getQuery()}}
\item \href{#method-SQLiteQueryManager-clone}{\code{SQLiteQueryManager$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="TrisomExploreR" data-topic="SQLiteConnectionManager" data-id="connect"><a href='../../TrisomExploreR/html/SQLiteConnectionManager.html#method-SQLiteConnectionManager-connect'><code>TrisomExploreR::SQLiteConnectionManager$connect()</code></a></span></li>
<li><span class="pkg-link" data-pkg="TrisomExploreR" data-topic="SQLiteConnectionManager" data-id="disconnect"><a href='../../TrisomExploreR/html/SQLiteConnectionManager.html#method-SQLiteConnectionManager-disconnect'><code>TrisomExploreR::SQLiteConnectionManager$disconnect()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SQLiteQueryManager-new"></a>}}
\if{latex}{\out{\hypertarget{method-SQLiteQueryManager-new}{}}}
\subsection{Method \code{new()}}{
helper function to set/format parameters tibble


Create a new instance of SQLiteQueryManager object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SQLiteQueryManager$new(filepath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filepath}}{string - path to `.sqlite` database file}

\item{\code{parameters}}{tibble - tibble of parameter values}

\item{\code{e}}{- environment - ephemeral environment to load parameter values}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SQLiteQueryManager` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SQLiteQueryManager-getQuery"></a>}}
\if{latex}{\out{\hypertarget{method-SQLiteQueryManager-getQuery}{}}}
\subsection{Method \code{getQuery()}}{
Execute parameterized query against target database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SQLiteQueryManager$getQuery(queryString, parameters = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{queryString}}{- string - parameterized sql query string}

\item{\code{parameters}}{- tibble - parameter names and values}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SQLiteQueryManager-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SQLiteQueryManager-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SQLiteQueryManager$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
